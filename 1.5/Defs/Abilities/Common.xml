<?xml version="1.0" encoding="utf-8"?>
<Defs>

	<!-- 通用的技能，比如各種發射物 -->

	<AbilityDef>
		<defName>DMS_FlashLauncher</defName>
		<label>flashbang barrage</label>
		<description>launch an indirect-fired flashbang grenade to stun the enemy to cover the retreat or assault.</description>
		<iconPath>UI/Ability/Grenade</iconPath>
		<aiCanUse>true</aiCanUse>
		<cooldownTicksRange>6000~7200</cooldownTicksRange>
		<charges>4</charges>
		<cooldownPerCharge>true</cooldownPerCharge>
		<verbProperties>
			<defaultCooldownTime>5</defaultCooldownTime>
			<verbClass>Verb_CastAbility</verbClass>
			<onlyManualCast>false</onlyManualCast>
			<range>24.9</range>
			<warmupTime>0.5</warmupTime>
			<soundCast>Mortar_LaunchA</soundCast>
			<requireLineOfSight>false</requireLineOfSight>
			<targetParams>
				<canTargetPawns>true</canTargetPawns>
				<canTargetLocations>true</canTargetLocations>
				<canTargetBuildings>false</canTargetBuildings>
			</targetParams>
		</verbProperties>
		<comps>
			<li Class="CompProperties_AbilityLaunchProjectile">
				<projectileDef>DMS_Bullet_FlashBang</projectileDef>
			</li>
		</comps>
	</AbilityDef>

	
	<ThingDef ParentName="BaseBullet">
		<defName>DMS_Bullet_FlashBang</defName>
		<label>flashbang grenade</label>
		<graphicData>
			<texPath>Things/Projectile/Bullet_Big</texPath>
			<graphicClass>Graphic_Single</graphicClass>
			<shaderType>TransparentPostLight</shaderType>
			<drawSize>2</drawSize>
		</graphicData>
		<thingClass>Projectile_Explosive</thingClass>
		<projectile>
			<speed>40</speed>
			<damageDef>Stun</damageDef>
			<damageAmountBase>10</damageAmountBase>
			<stoppingPower>1.5</stoppingPower>
			<explosionRadius>3.1</explosionRadius>
			<ai_IsIncendiary>false</ai_IsIncendiary>
			<arcHeightFactor>0.8</arcHeightFactor>
			<shadowSize>0.6</shadowSize>
		</projectile>
	</ThingDef>

	<AbilityDef>
		<defName>DMS_SmokeLauncher</defName>
		<label>particle smoke barrage</label>
		<description>launch an anti-charged weapon particle smole emitter to nullify incoming charged ammunition in short time.</description>
		<iconPath>UI/Ability/Smoke</iconPath>
		<aiCanUse>true</aiCanUse>
		<cooldownTicksRange>3000~3600</cooldownTicksRange>
		<charges>4</charges>
		<cooldownPerCharge>true</cooldownPerCharge>
		<verbProperties>
			<defaultCooldownTime>5</defaultCooldownTime>
			<verbClass>Verb_CastAbility</verbClass>
			<onlyManualCast>false</onlyManualCast>
			<range>19.9</range>
			<warmupTime>0.5</warmupTime>
			<soundCast>Mortar_LaunchA</soundCast>
			<requireLineOfSight>false</requireLineOfSight>
			<targetParams>
				<canTargetPawns>true</canTargetPawns>
				<canTargetLocations>true</canTargetLocations>
				<canTargetBuildings>false</canTargetBuildings>
			</targetParams>
		</verbProperties>
		<comps>
			<li Class="CompProperties_AbilityLaunchProjectile">
				<projectileDef>DMS_Bullet_BlasterSmoke</projectileDef>
			</li>
		</comps>
	</AbilityDef>

	<AbilityDef>
		<defName>DMS_MissileLauncher</defName>
		<label>launch missile</label>
		<description>launch a long range top-down attack missile to destory enemies, the missile takes long time to reload.</description>
		<iconPath>UI/Ability/Missile</iconPath>
		<aiCanUse>true</aiCanUse>
		<cooldownTicksRange>120000~120000</cooldownTicksRange>
		<charges>4</charges>
		<cooldownPerCharge>true</cooldownPerCharge>
		<verbProperties>
			<defaultCooldownTime>5</defaultCooldownTime>
			<verbClass>Verb_CastAbility</verbClass>
			<onlyManualCast>false</onlyManualCast>
			<range>99.9</range>
			<warmupTime>5</warmupTime>
			<soundCast>RocketswarmLauncher_Fire</soundCast>
			<requireLineOfSight>false</requireLineOfSight>
			<targetParams>
				<canTargetPawns>true</canTargetPawns>
				<canTargetLocations>true</canTargetLocations>
				<canTargetBuildings>true</canTargetBuildings>
			</targetParams>
		</verbProperties>
		<comps>
			<li Class="CompProperties_AbilityLaunchProjectile">
				<projectileDef>Bullet_9M311V</projectileDef>
			</li>
		</comps>
	</AbilityDef>

	<AbilityDef>
		<defName>DMS_LongJump</defName>
		<label>bionic longjump</label>
		<description>Jump to a distant location using bionic muscles.</description>
		<iconPath>UI/Abilities/MechLongJump</iconPath>
		<cooldownTicksRange>600</cooldownTicksRange>
		<charges>2</charges>
		<cooldownPerCharge>true</cooldownPerCharge>
		<hostile>false</hostile>
		<casterMustBeCapableOfViolence>false</casterMustBeCapableOfViolence>
		<verbProperties>
		  <verbClass>Verb_CastAbilityJump</verbClass>
		  <label>jump</label>
		  <violent>false</violent>
		  <forceNormalTimeSpeed>false</forceNormalTimeSpeed>
		  <warmupTime>0.5</warmupTime>
		  <minRange>5.9</minRange>
		  <range>9.9</range>
		  <requireLineOfSight>true</requireLineOfSight>
		  <soundCast>Longjump_Jump</soundCast>
		  <soundLanding>Longjump_Land</soundLanding>
		  <flyWithCarriedThing>true</flyWithCarriedThing>
		  <targetParams>
			<canTargetLocations>true</canTargetLocations>
			<canTargetPawns>false</canTargetPawns>
			<canTargetBuildings>false</canTargetBuildings>
		  </targetParams>
		</verbProperties>
	</AbilityDef>

	<AbilityDef>
		<defName>DMS_RepairMode</defName>
		<label>self-repair</label>
		<description>initial self-repair mode to rebuild missing parts by electroactive memory metal, thus all sensors will temporarily work disabled to prevent electrical damage.</description>
		<iconPath>UI/Ability/SelfRepair</iconPath>
		<cooldownTicksRange>120000</cooldownTicksRange> <!-- 2 day -->
		<showPsycastEffects>false</showPsycastEffects>
		<sendMessageOnCooldownComplete>true</sendMessageOnCooldownComplete>
		<aiCanUse>true</aiCanUse>
		<targetRequired>false</targetRequired>
		<verbProperties>
			<verbClass>Verb_CastAbility</verbClass>
			<label>initialize self-repair mode</label>
			<drawAimPie>false</drawAimPie>
			<warmupTime>5</warmupTime>
			<violent>false</violent>
			<targetable>false</targetable>
			<targetParams>
				<canTargetSelf>true</canTargetSelf>
			</targetParams>
		</verbProperties>
		<comps>
			<li Class="DMS.CompProperties_AbilitySelfRepairMode">
				<applicableToMechs>true</applicableToMechs>
				<availableWhenTargetIsWounded>true</availableWhenTargetIsWounded>
			</li>
			<li Class="CompProperties_AbilityGiveHediff">
				<compClass>CompAbilityEffect_GiveHediff</compClass>
				<hediffDef>DMS_SelfRepair</hediffDef>
				<applicableToMechs>true</applicableToMechs>
				<onlyApplyToSelf>True</onlyApplyToSelf>
				<replaceExisting>true</replaceExisting>
				<durationSecondsOverride>300~600</durationSecondsOverride>
			</li>
		</comps>
	</AbilityDef>

	<HediffDef>
		<defName>DMS_SelfRepair</defName>
		<label>system maintenance</label>
		<hediffClass>HediffWithComps</hediffClass>
		<description>This mech has entered self-maintenance mode and is checking missing parts reconstructed by electroactive memory metal. All sensors are disabled to activate self-testing systems, which will last at least a day to restart the system fully.</description>
		<isBad>false</isBad>
		<preventsDeath>true</preventsDeath>
		<forceRemoveOnResurrection>true</forceRemoveOnResurrection>
		<comps>
			<li Class="HediffCompProperties_Disappears">
				<showRemainingTime>true</showRemainingTime>
			</li>
			<li Class="HediffCompProperties_Effecter">
				<stateEffecter>DMS_Sustainer_EMP</stateEffecter>
			</li>
			<li Class="DMS.HediffCompProperties_MechHeal">
				<healAmount>1</healAmount>
				<healIntervalTicksStanding>100</healIntervalTicksStanding>
			</li>
		</comps>
		<stages>
			<li>
				<becomeVisible>true</becomeVisible>
				<capMods>
					<li>
						<capacity>Consciousness</capacity>
						<setMax>0.5</setMax>
					</li>
					<li>
						<capacity>Sight</capacity>
						<setMax>0</setMax>
					</li>
					<li>
						<capacity>Manipulation</capacity>
						<setMax>0.2</setMax>
					</li>
					<li>
						<capacity>Hearing</capacity>
						<setMax>0</setMax>
					</li>
					<li>
						<capacity>Talking</capacity>
						<setMax>0</setMax>
					</li>
					<li>
						<capacity>Moving</capacity>
						<setMax>0.2</setMax>
					</li>
				</capMods>
			</li>
		</stages>
	</HediffDef>

	<AbilityDef>
		<defName>DMS_NuclearOverload</defName>
		<label>fission overload</label>

		<description>In order to avoid environmental pollution caused by nuclear battery leakage after the body is severely damaged, the fission battery can be manually overloaded to react the nuclear fuel in an instant, and the external manifestation is a nuclear explosion. \n\nSuch explosion is enough to clean up the unreacted nuclear material, including the surrounding areas. everything of...</description>
		<iconPath>UI/Ability/FissonOverload</iconPath>
		<cooldownTicksRange>60</cooldownTicksRange> <!-- 2 day -->
		<showPsycastEffects>false</showPsycastEffects>
		<aiCanUse>true</aiCanUse>
		<targetRequired>false</targetRequired>
		<ai_SearchAOEForTargets>true</ai_SearchAOEForTargets>
		<confirmationDialogText>overload the fission battery will result a large scale explosion and destroy this unit. \n\nare you sure to do this?</confirmationDialogText>
		<verbProperties>
			<verbClass>Verb_CastAbility</verbClass>
			<label>fission overload</label>
			<drawAimPie>false</drawAimPie>
			<warmupTime>0.25</warmupTime>
			<violent>false</violent>
			<warmupEffecter>Vaporize_Heatwave</warmupEffecter>
			<targetable>false</targetable>
			<range>7.9</range>
			<targetParams>
				<canTargetSelf>true</canTargetSelf>
			</targetParams>
			<ai_AvoidFriendlyFireRadius>10</ai_AvoidFriendlyFireRadius>
		</verbProperties>
		<comps>
			<li Class="DMS.CompProperties_AbilitySelfExplosion">
				<explosionDamage>Demolish</explosionDamage>
				<explosionSound>Explosion_GiantBomb</explosionSound>
                <explosionEffect>GiantExplosion</explosionEffect>
				<damageAmount>150</damageAmount>
				<armorPenetration>2</armorPenetration>
				<range>7.9</range>
			</li>
		</comps>
	</AbilityDef>

</Defs>